{
  //list of reference images
  count:i = 1000

  reference:s = "resources/textures/DishesData/plate_10.jpg"
  reference:s = "resources/textures/DishesData/plate_9.jpg"

  reference:s = "resources/textures/DishesData/cup_1.jpg"
  reference:s = "resources/textures/DishesData/cup_2.jpg"
  reference:s = "resources/textures/DishesData/cup_3.jpg"
  reference:s = "resources/textures/DishesData/cup_4.jpg"
  reference:s = "resources/textures/DishesData/cup_5.jpg"
  reference:s = "resources/textures/DishesData/cup_6.jpg"

  reference:s = "resources/textures/DishesData/plate_1.jpg"
  reference:s = "resources/textures/DishesData/plate_2.jpg"
  reference:s = "resources/textures/DishesData/plate_3.jpg"
  reference:s = "resources/textures/DishesData/plate_4.jpg"
  reference:s = "resources/textures/DishesData/plate_5.jpg"
  reference:s = "resources/textures/DishesData/plate_6.jpg"
  reference:s = "resources/textures/DishesData/plate_7.jpg"
  reference:s = "resources/textures/DishesData/plate_8.jpg"
  reference:s = "resources/textures/DishesData/plate_9.jpg"
  reference:s = "resources/textures/DishesData/plate_10.jpg"

  memetic_classic
  {
    total_function_calls:i = 6000
    population_size:i = 30
    tournament_size:i = 12
    mutation_chance:r = 0.3
    mutation_power:r = 0.2
    local_search_iterations:i = 33
    local_search_learning_rate:r = 0.02
    start_search_iterations:i = 33
    start_search_learning_rate:r = 0.03
    recreation_diversity_thr:r = 3.0
    depth_reg_q:r = 0.0
    min_iter_between_recreations:i = 150
  }

  DE
  {
    generations:i = 8
    population_size:i = 8
    local_search_iterations:i = 40
    local_search_learning_rate:r = 0.5
    crossover_rate:r = 0.3
    K:r = 0.7
    verbose:b = true
  }

  grid_search_adam
  {
    start_points_count:i = 10
    local_search_iterations:i = 100
    local_search_learning_rate:r = 0.02
    grid_params_gradient_mult:r = 0.1
    verbose:b = true
    initial_params:arr = {3.318, 3.634, 3.873, 4.091, 4.220, 4.309, 4.356, 4.4, 4.4, 1.0, 0.987, 0.041, 0.477, 0.223, 0.225, 0.277, 0.296, 0.310, 0.317, 0.310, 0.302, 0.296, 0.289, 0.287, 0.286, 0.291, 0.295, 0.306, 0.317, 0.326, 0.345, 0.364, 0.375, 1.991, 1.990, 1.209, 1.221, 1.190, 1.201, 1.153, 1.131, 1.088, 1.048, 0.998, 0.952, 0.899, 0.853, 0.826, 0.842, 0.831, 0.930, 1.098, 1.690, 
                          -0.149, 0.573, 1.774, 0.35, 2.945, 0.012, 510.403, 6.013, 26.971, 1.000, 56.560, 0.9, 0.125}
    grid
    {
      camera_fov
      {
        values:arr = {0.1, 0.15, 0.25}
      }
      rotate_x
      {
        values:arr = {0.2, 0.25, 0.3}
      }
    }
  }

  adam
  {
    iterations:i = 150
    learning_rate:r = 0.01
    verbose:b = true
    initial_params:arr = {3.318, 3.634, 3.873, 4.091, 4.220, 4.309, 4.356, 4.4, 4.4, 1.0, 0.987, 0.041, 0.477, 0.223, 0.225, 0.277, 0.296, 0.310, 0.317, 0.310, 0.302, 0.296, 0.289, 0.287, 0.286, 0.291, 0.295, 0.306, 0.317, 0.326, 0.345, 0.364, 0.375, 1.991, 1.990, 1.209, 1.221, 1.190, 1.201, 1.153, 1.131, 1.088, 1.048, 0.998, 0.952, 0.899, 0.853, 0.826, 0.842, 0.831, 0.930, 1.098, 1.690, -0.149, 0.573, 1.774, 0.35, 2.945, 0.012, 510.403, 6.013, 26.971, 1.000, 56.560, 0.9, 0.125}
  }
  
  //which procedural generator is used to create models. Currently only "dishes" is available
  procedural_generator:s = "dishes"

  //a .blk file describing parameters for scene, such as camera position, light etc.
  scene_description:s = "diff_gen_scene_parameters_description.blk"


  //if synthetic_reference is true, reference image will be ignored. Instead of it, a model with reference_params
  //will be created, rendered and saved to file. This new file will be used as reference for texture_optimization
  //reference_params contains model paramters and reference_scene contains scene paramters
  synthetic_reference:b = false
  reference_params:arr = {3.078, 3.534, 3.847, 4.112, 4.312, 4.429, 4.560, 4.636, 4.638, 1.149, 1.000, 0.041, 0.548, 
                          0.100, 0.368, 0.479, 0.328, 0.228, 0.241, 0.431, 0.435, 0.297, 0.297, 0.297, 0.212, 0.212, 0.212, 0.222, 0.222, 0.222, 0.384, 0.384, 0.384,
                          1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, }
  reference_scene:arr = {0.136, 0.545, 0.112, 0.091, -0.395, 0.019, 0, 0.5, 10, 1, 150, 0.1}
  reference_image_size:i = 512

  regularization_alpha:r = 0.01
  original_reference_size:i = 1024
  model_material:s = "" //leave empty to autoselect material (will take a few minutes)
  save_intermediate_images:b = true
  save_folder:s = "ai_cup_2"

  silhouette_optimization_settings
  {
    optimization_stages:i = 3

    stage_0
    {
      optimizer:s = "grid_search_adam"
      model_quality:i = 0
      render_image_size:i = 128
      spp:i = 1
      optimizer_settings
      {
        start_points_count:i = 16
        local_search_iterations:i = 100
        local_search_learning_rate:r = 0.02
        grid_params_gradient_mult:r = 0.1
        verbose:b = true
        //initial_params:arr = {3.256, 3.563, 3.830, 3.962, 4.135, 4.198, 4.303, 4.420, 4.476, 1.016, 0.000, 0.055, 0.575, 0.123, 0.195, 0.277, 0.375, 0.413, 0.432, 0.424, 0.394, 0.357, 0.321, 0.289, 0.269, 0.254, 0.246, 0.246, 0.256, 0.273, 0.315, 0.284, 0.269, 0.901, 2.000, 1.339, 0.636, 0.562, 0.541, 0.550, 0.568, 0.583, 0.585, 0.535, 0.500, 0.500, 0.500, 0.500, 0.505, 0.665, 1.074, 0.957, 0.516, 0.133, 0.562, 0.360, 0.132, 0.530, 0.024, 8.307, 1.930, 662.931, 1.000, 79.108, 0.200, 0.500}
        //cup_6
        //initial_params:arr = {3.384, 3.657, 3.912, 4.125, 4.274, 4.392, 4.466, 4.487, 4.489, 1.072, 1.000, 0.060, 0.491, 0.204, 0.243, 0.314, 0.378, 0.416, 0.429, 0.424, 0.411, 0.395, 0.381, 0.364, 0.352, 0.342, 0.335, 0.329, 0.330, 0.332, 0.343, 0.351, 0.354, 1.985, 1.840, 1.176, 0.853, 0.795, 0.772, 0.767, 0.790, 0.808, 0.812, 0.794, 0.791, 0.767, 0.782, 0.773, 0.771, 0.819, 0.837, 1.033, 1.456,  0.168, 0.569, 1.048, 0.003, -0.338, -0.012, 000.000,   0.500, 662.898,   1.000, 79.108, 0.200, 0.250}
        //cup 14 
        //initial_params:arr = {2.550, 3.300, 3.699, 4.049, 4.245, 4.444, 4.594, 4.742, 4.853, 0.967, 0.662, 0.053, 0.439, 0.237, 0.184, 0.185, 0.214, 0.253, 0.283, 0.312, 0.336, 0.343, 0.337, 0.319, 0.293, 0.263, 0.234, 0.205, 0.176, 0.174, 0.173, 0.168, 0.155, 0.743, 1.266, 1.393, 1.360, 1.147, 1.062, 0.784, 0.836, 0.949, 1.019, 1.058, 1.127, 1.118, 1.116, 1.112, 1.228, 0.988, 0.772, 0.634, 0.807,  0.126, 0.523, 1.821, 0.444, -0.288,  0.025, 000.000,   0.500, 490.099,   1.000, 96.099, 0.546, 0.250}
        //cup 5
        //initial_params:arr = {3.318, 3.634, 3.873, 4.091, 4.220, 4.309, 4.356, 4.400, 4.400, 1.000, 0.987, 0.041, 0.477, 0.223, 0.225, 0.277, 0.296, 0.310, 0.317, 0.310, 0.302, 0.296, 0.289, 0.287, 0.286, 0.291, 0.295, 0.306, 0.317, 0.326, 0.345, 0.364, 0.375, 1.991, 1.990, 1.209, 1.221, 1.190, 1.201, 1.153, 1.131, 1.088, 1.048, 0.998, 0.952, 0.899, 0.853, 0.826, 0.842, 0.831, 0.930, 1.098, 1.690, -0.149, 0.573, 1.774, 0.359,  2.945,  0.012, 510.403,   6.013,  26.971,   1.000, 56.560, 0.9  , 0.125}
        //cup 3
        initial_params:arr =   {3.082072, 3.146642, 3.850472, 4.152475, 4.192972, 4.399781, 4.455011, 4.467184, 4.763268, 1.038858, 0.000000, 0.025000, 0.646102, 0.114464, 0.335810, 0.321554, 0.324708, 0.368751, 0.351436, 0.268663, 0.257547, 0.341103, 0.310236, 0.264957, 0.287104, 0.274572, 0.284287, 0.285163, 0.351188, 0.378254, 0.362683, 0.282992, 0.500000, 0.546057, 1.192526, 1.152983, 1.051511, 0.961181, 0.598342, 0.500000, 0.500000, 0.621054, 0.508631, 0.559964, 0.625528, 0.583533, 0.609078, 0.923046, 0.578841, 0.815746, 0.841771, 0.914729, 0.533301, 0.133065, 0.545766, 0.452110, 0.016933, 0.167030, 0.023111, 100.000000, 250.000000, 100.000000, 100.000000, 50.000000, 0.250000, 0.125000}
        grid
        {
          handle_center_y
          {
            values:arr = {0.4, 0.5, 0.6}
          }
          rotate_y
          {
            values:arr = {3.14, 3.14}
          }
          camera_fov
          {
            values:arr = {0.2, 0.3, 0.4, 0.5}
          }
          rotate_x
          {
            values:arr = {0.0, 0.2, 0.4}
          }
        }
      }
    }
    stage_1
    {
      optimizer:s = "adam"
      model_quality:i = 0
      render_image_size:i = 256
      spp:i = 1
      optimizer_settings
      {
        //initial_params:arr = {3.330, 3.613, 3.858, 4.033, 4.182, 4.269, 4.355, 4.356, 4.425, 1.008, 1.000, 0.030, 0.668, 0.100, 0.100, 0.164, 0.222, 0.281, 0.318, 0.345, 0.356, 0.352, 0.341, 0.326, 0.313, 0.302, 0.296, 0.297, 0.303, 0.316, 0.346, 0.388, 0.489, 2.000, 2.000, 1.511, 1.055, 0.939, 0.963, 1.033, 1.046, 1.003, 0.961, 0.942, 0.925, 0.897, 0.880, 0.833, 0.816, 0.840, 0.932, 1.392, 1.819, 0.132, 0.564, 0.409, 0.144, 0.443, 0.023, 7.878, 4.091, 663.031, 1.177, 79.108, 0.200, 0.500}
        iterations:i = 150
        learning_rate:r = 0.005
        verbose:b = true
      }
    }
    stage_2
    {
      optimizer:s = "adam"
      model_quality:i = 1
      render_image_size:i = 512
      spp:i = 1
      optimizer_settings
      {
        iterations:i = 150
        learning_rate:r = 0.005
        verbose:b = true
      }
    }
  }

  texture_optimization_settings
  {
    optimization_stages:i = 3

    stage_material_selection
    {
      optimizer:s = "adam"
      texture_lr:r = 0.25
      model_quality:i = 0
      render_image_size:i = 128
      spp:i = 256     
      optimizer_settings
      {
        iterations:i = 20
        learning_rate:r = 1
      }
    }

    stage_0
    {
      optimizer:s = "adam"
      texture_lr:r = 0.1
      model_quality:i = 0
      render_image_size:i = 128
      spp:i = 256  
      optimizer_settings
      {
        iterations:i = 75
        learning_rate:r = 0
        verbose:b = true
      }   
    }

    stage_1
    {
      optimizer:s = "adam"
      texture_lr:r = 0.3
      model_quality:i = 1
      render_image_size:i = 256
      spp:i = 512     
      optimizer_settings
      {
        iterations:i = 75
        learning_rate:r = 0.5
      } 
    }

    stage_2
    {
      optimizer:s = "adam"
      texture_lr:r = 0.3
      model_quality:i = 1
      render_image_size:i = 512
      spp:i = 512   
      optimizer_settings
      {
        iterations:i = 40
        learning_rate:r = 0.25
      }   
    }
  }
}
